@using System.Windows.Documents
@using System.Windows.Controls
@using System.Windows
@using System.Drawing;
@using System.Drawing.Printing;

<h1>Printing Task</h1>


<button class="btn btn-primary" @onclick="ShowModal">Click here</button>

@if (checkModal)
{
    <form>
        <div class="" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Print in Inches</h5>
                        <button type="button" class="close" @onclick="CloseModal" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <select @onchange="@ChangeSelectFunction" class="form-control">
                            @foreach (var item in customPages)
                            {
                                <option value="@item.Name">@item.Name</option>
                            }

                        </select>
                        <div class="form-group row p-3">
                            <label class="control-label col-2">Width</label>
                            <input type="number" @bind-value="@CurrentSelected.Width" readonly="@CheckReadOnly" required class="form-control col-3" />
                            <label class="control-label col-2">Height</label>
                            <input type="number" @bind-value="@CurrentSelected.Height" readonly="@CheckReadOnly" required class="form-control col-3" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" @onclick="@PrintNow" class="btn btn-primary">Print Now</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseModal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
}
@code {

    private bool checkModal = false;
    private string CheckReadOnly = "readonly";
    private static List<CustomPage> customPages = new List<CustomPage>()
    {
        new CustomPage(){Name="A4",Height=11.69,Width=8.27},
        new CustomPage(){Name="Letter",Height=11,Width=8.5},
        new CustomPage(){Name="Legal",Height=14,Width=8.5},
        new CustomPage(){Name="Custom",Height=0,Width=0,}
    };
    private CustomPage CurrentSelected =customPages.First();

    void ChangeSelectFunction(ChangeEventArgs e)
    {
        CurrentSelected = customPages.FirstOrDefault(a => a.Name == e.Value.ToString());
        if (CurrentSelected.Name != "Custom")
            CheckReadOnly = "readonly";
        else
        {
            CheckReadOnly = null;
        }

    }
    private void ShowModal()
    {
        checkModal = true;
    }
    private void CloseModal()
    {
        checkModal = false;
    }

    private void PrintNow()
    {
        PrintDialog printDlg = new PrintDialog();
        FlowDocument doc = CreateFlowDocument(CurrentSelected);
        doc.Name = "FlowDoc";
        IDocumentPaginatorSource idpSource = doc;
        printDlg.PrintDocument(idpSource.DocumentPaginator, "Hello WPF Printing.");
    }

    private FlowDocument CreateFlowDocument(CustomPage customPage)
    {
        FlowDocument doc = new FlowDocument();
        doc.PagePadding = new Thickness(30);
        Section sec = new Section();
        Paragraph p1 = new Paragraph();
        Bold bld = new Bold();
        bld.Inlines.Add(new Run("First Paragraph"));
        Italic italicBld = new Italic();
        italicBld.Inlines.Add(bld);
        Underline underlineItalicBld = new Underline();
        underlineItalicBld.Inlines.Add(italicBld);
        p1.Inlines.Add(underlineItalicBld);
        sec.Blocks.Add(p1);
        doc.Blocks.Add(sec);
        sec.Blocks.Add(p1);

        doc.PageHeight = customPage.Height*96;
        doc.PageWidth = customPage.Width*96;

        return doc;
    }



    public class CustomPage
    {
        public string Name { get; set; }
        public double Width { get; set; }
        public double Height { get; set; }
    }
}


